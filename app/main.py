import os
from app.ui import common
from app.finance_traker import FinanceTracker, ensure_files_directory_exists
from app.transaction import Transaction
from prompt_toolkit import prompt
from app.validation import AmountValidator, DateValidator, type_completer
from datetime import datetime
from typing import Optional


def add_transaction_ui(tracker: FinanceTracker) -> None:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º)."""
    common.display_header("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    try:
        amount = prompt(("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: "), validator=AmountValidator())
        category = prompt("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ").strip()
        if not category:
            print("‚ùå –û—à–∏–±–∫–∞: –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")
            return

        date = prompt("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–ì–ì–ì–ì-–ú–ú-–î–î): ", validator=DateValidator())
        transaction_type = prompt(
            "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø (income/expense): ",
            completer=type_completer,
            complete_while_typing=True
        ).lower()

        if transaction_type not in ("income", "expense"):
            print("‚ùå –û—à–∏–±–∫–∞: –¢–∏–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'income' –∏–ª–∏ 'expense'")
            return

        transaction = Transaction(amount, category, date, transaction_type)
        tracker.add_transaction(transaction)
        print("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    except KeyboardInterrupt:
        print("\n‚èπ –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def edit_transaction_ui(tracker: FinanceTracker) -> None:
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."""
    common.display_header("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    try:
        if not tracker.transactions:
            print("–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
            return

        print("\n–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:")
        for i, t in enumerate(tracker.transactions):
            print(f"{i}. {t}")

        index = int(prompt("\n–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: "))
        if not (0 <= index < len(tracker.transactions)):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.")
            return

        amount = float(prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É: ", validator=AmountValidator()))
        category = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ").strip()
        if not category:
            print("‚ùå –û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")
            return

        date = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É (–ì–ì–ì–ì-–ú–ú-–î–î): ", validator=DateValidator())
        transaction_type = prompt(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–ø (income/expense): ",
            completer=type_completer,
            complete_while_typing=True
        ).lower()
        if transaction_type not in ("income", "expense"):
            print("‚ùå –û—à–∏–±–∫–∞: –¢–∏–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'income' –∏–ª–∏ 'expense'")
            return

        filename = prompt("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, data.csv): ").strip()
        if not filename:
            print("‚ùå –û—à–∏–±–∫–∞: –ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
            return
        elif not filename.endswith(".csv"):
            filename += ".csv"

        new_transaction = Transaction(amount, category, date, transaction_type)
        tracker.edit_transaction(index, new_transaction, filename)
        print("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞!")
    except KeyboardInterrupt:
        print("\n‚èπ –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def delete_transaction_ui(tracker: FinanceTracker) -> None:
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."""
    common.display_header("–£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    try:
        if not tracker.transactions:
            print("–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            return

        print("\n–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:")
        for i, t in enumerate(tracker.transactions):
            print(f"{i}. {t}")

        index = int(prompt("\n–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
        if not (0 <= index < len(tracker.transactions)):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.")
            return

        filename = prompt("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, data.csv): ").strip()
        if not filename:
            print("‚ùå –û—à–∏–±–∫–∞: –ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
            return
        elif not filename.endswith(".csv"):
            filename += ".csv"

        tracker.delete_transaction(index, filename)
        print("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
    except KeyboardInterrupt:
        print("\n‚èπ –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def show_balance_ui(tracker: FinanceTracker):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞."""
    common.display_header("–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å")
    balance = tracker.get_balance()
    print(f"\nüíµ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:.2f} —Ä—É–±.")


def show_monthly_report_ui(tracker: FinanceTracker) -> None:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—Ç—á–µ—Ç–∞ –∑–∞ –º–µ—Å—è—Ü."""
    common.display_header("–û—Ç—á–µ—Ç–∞ –∑–∞ –º–µ—Å—è—Ü")
    try:
        current_year = datetime.now().year
        year = int(prompt(f"–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é {current_year}): ") or current_year)
        month = int(prompt("–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü (1-12): "))

        if month < 1 or month > 12:
            print("‚ùå –û—à–∏–±–∫–∞: –ú–µ—Å—è—Ü –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 12.")
            return
        report = tracker.get_monthly_report(month, year)
        if report:
            print(f"\nüìä –û—Ç—á–µ—Ç –∑–∞ {month:02d}/{year}:")
            print("-" * 70)
            print(f"{'–î–∞—Ç–∞':<12} | {'–¢–∏–ø':<8} | {'–ö–∞—Ç–µ–≥–æ—Ä–∏—è':<20} | {'–°—É–º–º–∞':>10}")
            print("-" * 70)
            for t in report:
                print(f"{t.date} | {t.type:<8} | {t.category:<20} | {t.amount:>10.2f} —Ä—É–±.")
            print("-" * 70)

            # –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤
            income = sum(t.amount for t in report if t.type == "income")
            expense = sum(t.amount for t in report if t.type == "expense")
            print(f"\n–ò—Ç–æ–≥–æ –¥–æ—Ö–æ–¥–æ–≤: {income:.2f} —Ä—É–±.")
            print(f"–ò—Ç–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–æ–≤: {expense:.2f} —Ä—É–±.")
            print(f"–ë–∞–ª–∞–Ω—Å –∑–∞ –ø–µ—Ä–∏–æ–¥: {(income - expense):.2f} —Ä—É–±.")
        else:
            print("–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
    except ValueError:
        print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def plot_spending_ui(tracker: FinanceTracker) -> None:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º."""
    common.display_header("–ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤")
    try:
        tracker.plot_spending_by_category()
        print("\nüìà –ì—Ä–∞—Ñ–∏–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞: {e}")


def export_to_csv_ui(tracker: FinanceTracker):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ CSV."""
    common.display_header("–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
    try:
        default_filename = f"transactions_{datetime.now().strftime('%-Y%m-%d')}.csv"
        filename = prompt(f"–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é {default_filename}): ").strip() or default_filename
        if not filename.endswith(".csv"):
            filename += ".csv"
        filepath = os.path.join("files", filename)
        if os.path.exists(filepath):
            choice = prompt("‚ö†Ô∏è –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/n): ").strip().lower()
            if choice != "y":
                print("‚èπ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω–µ–Ω.")
                return

        tracker.export_to_csv(filename)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª {filename}")
    except KeyboardInterrupt:
        print("\n‚èπ –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def select_csv_file() -> Optional[str]:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ CSV-—Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ files –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω."""
    ensure_files_directory_exists()
    csv_files = [f for f in os.listdir("files") if f.endswith(".csv")]

    if not csv_files:
        print("CSV-—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞.")
        return None

    common.display_header("–í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ CSV-—Ñ–∞–π–ª—ã:")
    for i, filename in enumerate(csv_files, 1):
        print(f"{i}. {filename}")
    print(f"{len(csv_files)+1}. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª")

    while True:
        choice = prompt("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if choice.isdigit():
            choice_num = int(choice)
            if 1 <= choice_num <= len(csv_files):
                return csv_files[choice_num - 1]
            elif choice_num == len(csv_files) + 1:
                return None
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


def main_menu() -> None:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    common.clean_screen()
    tracker = FinanceTracker()

    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    selected_file = select_csv_file()
    if selected_file:
        tracker.load_from_csv(selected_file)
        print(f"\n‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ {selected_file}")
    else:
        print("\n–†–∞–±–æ—Ç–∞–µ–º —Å –Ω–æ–≤—ã–º —Ñ–∞–π–ª–æ–º –¥–∞–Ω–Ω—ã—Ö.")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    while True:
        common.clean_screen()
        common.display_header("–õ–∏—á–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ç—Ä–µ–∫–µ—Ä")
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("1. üìù –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")
        print("2. üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å")
        print("3. üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü")
        print("4. üìä –í–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã")
        print("5. üíæ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV")
        print("6. ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")
        print("7. ‚ùå –£–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")
        print("8. üö™ –í—ã–π—Ç–∏")

        choice = prompt("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-8): ").strip()

        if choice == "1":
            common.clean_screen()
            add_transaction_ui(tracker)
        elif choice == "2":
            common.clean_screen()
            show_balance_ui(tracker)
        elif choice == "3":
            common.clean_screen()
            show_monthly_report_ui(tracker)
        elif choice == "4":
            common.clean_screen()
            plot_spending_ui(tracker)
        elif choice == "5":
            common.clean_screen()
            export_to_csv_ui(tracker)
        elif choice == "6":
            common.clean_screen()
            edit_transaction_ui(tracker)
        elif choice == "7":
            common.clean_screen()
            delete_transaction_ui(tracker)
        elif choice == "8":
            print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
